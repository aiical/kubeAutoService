---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ serviceName }}-job
  namespace: {{ namespace }}
  labels:
    app: {{ serviceName }}-job
spec:
  parallelism: {{ replicas }}
  backoffLimit: 1
  template:
    metadata:
      labels:
        app: {{ serviceName }}-job
    spec:
      restartPolicy: Never
      containers:
      - name: {{ serviceName }}-job
        image: {{ imageFullName }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ containerPort }}
        {# resources #}
        resources:
          limits:
            cpu: {{ cpu.limit }}
            memory: {{ memory.limit }}
            ephemeral-storage: {{ ephemeralStorage.limit }}
          requests:
            cpu: {{ cpu.request }}
            memory: {{ memory.request }}
            ephemeral-storage: {{ ephemeralStorage.request }}
        env:
        {# 用户自定义env #}
        {% if envList is not none %}
        {% for item in envList %}
        - name: {{ item.name }}
          value: {{ item.value }}
        {% endfor %}
        {% endif %}
        {# skywalking配置env #}
        {% if skyWalkingFlag == "Y" %}
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: AGENT_OPTS
          value: -javaagent:{{ skyWalkingHome }}/skywalking-agent.jar=agent.service_name={{ serviceName }}-job,agent.instance_name=$(POD_NAME)
        {% endif %}
        {# volumeMounts #}
        {% if fileBeatFlag == "Y" or volumeLocalInfoList | length > 0 or volumeNfsInfoList | length > 0 or configMapList | length > 0 %}
        volumeMounts:
        {# filebeat配置volumeMounts #}
        {% if fileBeatFlag == "Y" %}
        - name: app-logs
          mountPath: /logs
        {% endif %}
        {% if volumeLocalInfoList | length > 0 %}
        {% for volume in volumeLocalInfoList %}
        {# hostPath配置volumeMounts #}
        - name: {{ volume.name }}
          mountPath: {{ volume.mountPath }}
        {% endfor %}
        {% endif %}
        {% if volumeNfsInfoList | length > 0 %}
        {% for volume in volumeNfsInfoList %}
        {# nfs配置volumeMounts #}
        - name: {{ volume.name }}
          mountPath: {{ volume.mountPath }}
        {% endfor %}
        {% endif %}
        {% if configMapList | length > 0 %}
        {% for configMap in configMapList %}
        - name: {{ configMap.name }}
          mountPath: {{ configMap.mountPath }}/{{ configMap.file }}
          subPath: {{ configMap.file }}
        {% endfor %}
        {% endif %}
        {% endif %}
      {# fileBeat容器 #}
      {% if fileBeatFlag == "Y" %}
      - name: filebeat
        image: {{ libraryRepository }}/filebeat:{{ fileBeatVersion }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: app-logs
          mountPath: /logs
        - name: filebeat-path
          mountPath: /home/filebeat-{{ fileBeatVersion }}-linux-x86_64/configs/path.yml
          subPath: path.yml
      {% endif %}
      {# volumes #}
      {% if fileBeatFlag == "Y" or volumeLocalInfoList | length > 0 or volumeNfsInfoList | length > 0  or configMapList | length > 0 %}
      volumes:
      {# filebeat配置volumes #}
      {% if fileBeatFlag == "Y" %}
      - name: app-logs
        emptyDir: {}
      - name: filebeat-path
        configMap:
          name: {{ serviceName }}-fb-path
      - name: filebeat-conf
        configMap:
          name: {{ serviceName }}-fb-conf
      {% endif %}
      {% if volumeLocalInfoList | length > 0 %}
      {% for volume in volumeLocalInfoList %}
      - name: {{ volume.name }}
        hostPath:
          path: {{ volume.localPath}}
      {% endfor %}
      {% endif %}
      {% if volumeNfsInfoList | length > 0 %}
      {% for volume in volumeNfsInfoList %}
      - name: {{ volume.name }}
        persistentVolumeClaim:
          claimName: pvc-{{ volume.name }}
      {% endfor %}
      {% endif %}
      {% if configMapList | length > 0 %}
      {% for configMap in configMapList %}
      - name: {{ configMap.name }}
        configMap:
          name: {{ configMap.name }}
      {% endfor %}
      {% endif %}
      {% endif %}