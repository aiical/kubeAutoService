# 全局配置
global:
  # 必填
  # 发布模式
  # new为全新发布
  # update为更新发布
  # 后续开发灰度发布模式
  mode: new

  runEnv: prod

  skyWalkingFlag: Y
  # 必填
  # 固定填写app
  type: run-app

  # 必填
  # 是否需要创建镜像，是为Y,否为N
  # Y则需要填写docker部分配置
  # N则不填写docker部分配置
  dockerFlag: Y

  # 必填
  # 是否有k8s操作，是为Y,否为N
  # Y则需要填写kubernetes部分配置
  # N则不填写kubernetes部分配置
  k8sFlag: Y

  # 必填
  # 是否创建filebeat容器，是为Y,否为N
  # 固定日志抽取路径/logs，日志文件后缀*.log，请将应用日志配置到/logs下
  # 日志记录每条满足^[0-9]{4}[-/]{1}[0-9]{2}[-/]{1}[0-9]{2}
  fileBeatFlag: Y

  # 必填
  # 所在集群名
  # 默认dc01，现有(dc01，dc02)
  dcName: dc01

  # 系统大类名称
  # 例：young
  # 必填
  sysName: young

  # 应用名称
  # 例：web
  # 必填
  appName: web

  appContext: young

  # dockerFlag为N时必填，Y时不填
  tag:

  useExistImageInfo:
    projectName:
    imageName:
    imageTag:

# dockerfile配置
# 生成dockerfile的各项配置
docker:
  # 镜像名为 global.sysname-global.appname
  # 例如：young-web
  # 基础镜像#
  from: centos:3.0

  # 作者
  maintainer: hlzhou@chinaums.com

  # 进入容器后的工作路径
  # 默认/home
  workdir: /home

  # 容器内部需要创建的目录（列表）
  mkdir:
  # 格式
  # - "/XXX/XXX..."

  # tomcat配置
  # 1.若使用tomcat，进行配置
  # 2.若无tomcat，不配置
  tomcat:
    # 是否使用tomcat
    # 1.若使用，填写：Y，并继续填写下列信息
    # 2.若不使用，填写：N,下列信息均不填写
    flag: Y

    # tomcat大版本(7,8,9)
    version: 8

    # 默认latest，代表大版本下的最新版本
    # 自定义版本：填写tomcat工具包完整名称，如apache-tomcat-9.0.37.tar.gz
    name: latest

    # tomcat容器内部解压路径
    # 默认/home
    dest: /home

    #需要放在tomcat下的文件，如war包，config文件，xml文件等
    file:
    # - name: 文件名
    #   dest: tomcat目录的下级目录，使用相对路径，如war包放在webapps下，则填写webapps
    - name: young.war
      dest: webapps/
      key: "xxxxxxxxxxxxxxxxxxx1"
      md5Code: "yyyyyyyyyyyyyyyyyyyyy1"
    - name: catalina.properties
      dest: conf/
      key: "xxxxxxxxxxxxxxxxxxx2"
      md5Code: "yyyyyyyyyyyyyyyyyyyyy2"

  # jdk配置
  # 1.若使用jdk，进行配置
  # 2.若无jdk，不配置
  jdk:
    # 是否使用jdk
    # 1.若使用，填写：Y，并继续填写下列信息
    # 2.若不适用，填写：N,下列信息均不填写
    flag: Y

    # jdk大版本(6,7,8...)
    version: 8

    # 默认latest，代表大版本下的最新版本
    # 自定义版本：填写jdk工具包完整名称，如jdk-8u191-linux-x64.tar.gz
    name: latest

    # jdk容器内部解压路径
    # 默认/home
    dest: /home

    #需要放在jdk下的文件，如lib下的*.so文件等
    file:
    # - name: 文件名
    #   dest: jdk目录的下级目录，使用相对路径，如libsm4evp_x64.so放在jre/lib/amd64/下，则填写jre/lib/amd64/
    #   key: ""
    #   md5Code: ""

  # 需要复制到容器内部的文件，格式如下例子（列表）选填
  file:
  # - name: 文件名
  #   dest: 容器内部存放路径
  - name: test.txt
    dest: /home
    key: "xxxxxxxxxxxxxxxxxxx3"
    md5Code: "yyyyyyyyyyyyyyyyyyyyy3"

  # 容器内部需要执行的shell操作（列表）选填
  run:
  # - shell命令
  #- "echo 'nameserver 172.16.17.70' >> /etc/resolv.conf"
  #- "echo 'nameserver 172.16.17.251' >> /etc/resolv.conf"

  # 除JAVA_HOME外的其他环境变量（列表）选填
  env:
  # 格式：
  # - name: XXX
  #   value: XXX
  - name: JAVA_OPTS
    value: "-Xms8192m -Xmx8192m -XX:NewRatio=6 -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError "

  # 暴露端口（列表）
  expose: 8080

  # ENTRYPOINT
  # 1.容器启动时执行的命令，并能保证容器存活（列表，有先后顺序）
  # 2.若有tomcat应用，则选填，若无tomcat应用，则必填
  entrypoint:
  # 格式：
  # - COMMAND
  - pwd

# kubernetes配置
# 生成k8s和istio的各项资源配置清单yaml文件的配置
kubernetes:

  # 必填
  # 同一个控制器中起几个pod，默认1
  replicas: 2

  # 必填
  # 选择控制器类型，目前支持deployment、statefulset
  controllerType: deployment

  # 选填
  # 在controller_type: deployment时生效
  # 起几个deployment，默认2
  versionCount: 1

  # 选填
  # 配置容器内部/etc/hosts
  hostInfo:
  # 格式案例：
  # - ip: 198.19.1.100
  #   hostnames:
  #   - mail.chinaums.com

  # 选填
  # 节点选择器
  # 必须是存在的节点标签
  nodeSelector:
    - name: sysname
      value: default

  # 容器内部配置及容器流量控制
  container:
    # 端口和协议
    portInfo:
      # 必填
      # 协议
      # http，https，tcp,默认http
      protocol: http

      http:
        portNum: 8080

      tcp:
        portNum:
        tcpPortNum:


    # 选填
    # cpu配置
    # 默认
    # request: 250m
    # limit: 2
    cpu:
      request: 250m
      limit: 2

    # 选填
    # 内存配置
    # 默认
    # request: 64Mi
    # limit: 4096Mi
    memory:
      request: 4Gi
      limit: 10Gi

    # 选填
    # 就绪性探针
    readinessProbe:
      checkType: httpGet
      exec:
        commandList:
      tcpSocket:
        port:
      httpGet:
        path: /young/login.jsp
        port: 8080

      initialDelaySeconds: 50
      periodSeconds: 5


    # 选填
    # 存活性探针
    livenessProbe:
      # 参考kubectl explain deploy.spec.template.spec.containers.livenessProbe
      # 例：
      # 同上readinessProbe配置
      checkType: httpGet

      exec:
        commandList:
      tcpSocket:
        port:
      httpGet:
        path: /young/login.jsp
        port: 8080

      initialDelaySeconds: 50
      periodSeconds: 5

    # 选填
    # 容器生命周期设置
    # 参考kubectl explain deploy.spec.template.spec.containers.lifecycle
    lifecycle:
      # 启动后钩子
      postStartCommandList: []

      # 销毁前钩子
      preStopCommandList: []


    # 选填
    # 存储卷
    # 1.若有文件需要落地到本地节点服务器，则填写
    # 2.若没有落地问价需求，则不填写
    volume:
      emptyDir:
      - name: young-emptyDir-1
        mountPath: /home/emptyDir/emptyDir-1

      hostPath:
      - name: young-host-path
        mountPath: /home/host-path/hostPath-1
        localPath: /home/localPath
      nfs:
      - name: young-nfs
        mountPath: /home/nfs/nfs-1
        server: 10.3.120.1
        path: /home/nfs
        isFileShare: Y
      pvc:
      - name: young-pvc-1
        mountPath: /home/pvc/pvc-1
        storageClassName: nfs-storage-young
        accessModes:
        - ReadWriteOnce
        - ReadWriteMany
        size: 20Gi
      configMap:
      - name: young-dns
        mountPath: /etc
        file: resolv.conf

    # ...其他待开发

    # 选填
    # 容器内环境变量
    env:
      # 格式：
      # - name: xxx
      #   value: xxx
      # 或
      # - name: xxx
      #   valueFrom:
      #     fieldRef:
      #       fieldPath: xxxx
      - name: user
        value: hlzhou

  # 服务管理方式
  # 1.不过istio，采用nodePort方式，则type填写nodePort
  # 若选择nodePort形式，需配置nodePort端口，端口范围（30000-32767），不能重复使用

  # 2.过istio，采用istio方式，则type填写istio
  # 若选择istio形式，则不填写nodePort端口

  # 3.不暴露到集群外部访问，填写none
  # 默认为使用istio作为服务治理
  serverType:
    type: istio

    nodePort:
      port:

    istio:
      whiteIpList:
        - 10.3.13.13
        - 10.3.13.14
      # 选填
      # istio流量转发规则
      destinationRule:
        # 类型
        # 目前有两种类型：
        # 1.（无会话保持）轮循：roundRobin
        # 2.（会话保持）http cookie哈希：httpCookie
        # 3.（会话保持）http header name哈希: httpHeaderName
        # 4.（会话保持）ip地址哈希： useSourceIp
        type: httpCookie
        roundRobin:
          weight: []

        httpCookie:
          # http cookie 哈希参数
          # 若type为httpCookie，选填如下参数，存在默认值name: JSESSIONID, ttl:1800s
          # 其他模式不填
          name: JSESSIONID
          ttl: 1800s

        httpHeaderName:
          # http header name哈希参数
          # 若type为httpHeaderName，必填
          # 填写用于会话保持的http header name
          # 其他模式不填
          name:

      # 选填
      # 用于灰度发布，待开发，暂时不填写
      match:


  # 选填
  # 无特殊情况不填
  # 是否有透传需求，是填写Y，否填写N或者不填
  isPassThrough: